language: generic
os:
- linux
- osx
env:
  matrix:
  - CONDA_ENV=3.6
  - CONDA_ENV=3.7
  - CONDA_ENV=3.8
  global:
  - MPLBACKEND=Agg
  - secure: JPEQfViEt1HJ4G1jAahCf1epqwvFqiH2VMNJkLmf/KGBouWQVM/dUXKAybueRFK8MFgblx1WXFo9usJDxugF4Gok4FVKd3h7qRfREVfJwmZ/Cul3z9Lq61cIpSicPsaRWKB8jks1B+oGolWnY0C4Mq6vNewcWmZ/5OTfqEGt+6qMVFBFep2iHnNn556v4YKvjeVoYhl4nZIYXXnQ7TpWRAL2tLvxe65VEn9EOfgpDmpnTKbKeBtWE2yxFKruTGB194CbHnDaw1Rkp90No6KFqzq5l5kksAvtS7YYjoPRlPP8PzUcprymPwakANQ5kSr66fkaWCXApbVU8VUE+MPDR0YKtVmw0TJWKipCzkQOtginE/ZAcD326VHKPho+nRBfWGwxr4rnc303dSmwYKL1x+sowCaMuS74cARPhQRMxQDT2FpBglKazjeqX4euvG/IMGc7YQVdSDkxnNGO5+1GsAVN4Xfd/3tI2NgvMg0FVdD3rKJLEWb912wTwl4mm2dm2mMU3YvYrFVRvNtNZPNNJGlVtf93pNKxyyCDdFDfs4kh2tbrVfSin3Ku5s/qxtcjGeYGbEETbUUoBlQSemYiNrgbv+fn+snr+x7q1kV49vE+C5pxjtaaAnCp+oxWuzpXGwDvwthIT/3U6P5R6HE8l49FABGHOeX8PJcC2TJ8ZcI=
sudo: false
jobs:
  include:
  - stage: lint
    os: linux
    script:
    - pip install flake8
    - make lint
  - stage: docs
    os: linux
    install:
    - conda env create --file docs/environment.yml
    - conda activate terrainbento_docs
    - pip install -e .
    script:
    - make -C docs clean html linkcheck

  - &deploy
    stage: deploy
    if: tag =~ v.*$
    os: osx
    env: CONDA_ENV=3.8
    script:
    - pip install twine wheel
    - python setup.py bdist_wheel
    - twine upload -u katybarnhart -p$TWINE_PASSWORD --verbose dist/*terrainbento*

before_install:
- |
  if [[ $TRAVIS_OS_NAME == "osx" ]]; then
    brew remove --force $(brew list)
    brew cleanup -s
    rm -rf $(brew --cache)
  fi
- |
  mkdir -p $HOME/.matplotlib
  echo "backend: Agg" > $HOME/.matplotlib/matplotlibrc
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > $HOME/miniconda.sh
  else
    curl https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh > $HOME/miniconda.sh
  fi
- bash $HOME/miniconda.sh -b -p $(pwd)/anaconda
- export PATH="$(pwd)/anaconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda create -n test_env python=$CONDA_ENV
- source activate test_env
- conda info -a && conda list
install:
- pip install numpy
- pip install -e .
script:
- pip install pytest pytest-cov pytest-datadir coveralls
- pytest --cov-report=xml:$(pwd)/coverage.xml
after_success: coveralls
